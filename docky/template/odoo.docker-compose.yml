volumes:
  py3o_tmp:
services:
  mariadb:
    optional: Add magento server (with connector) ?
    image: paintedfox/mariadb
    environment:
      - USER=magento
      - PASS=magento
    ports:
      - 3306:3306
    volumes:
      - .mariadb/data/:/data
  magento:
    optional: Add magento server (with connector) ?
    environment:
      - DB_ENV_USER=magento
      - DB_ENV_PASS=magento
    image: akretion/docker-magento
    ports:
      - 80:80
    links:
      - mariadb:db
      - memcached:cache
    volumes:
      - .magento/firstrun:/firstrun
      - .magento/www:/var/www
    labels:
      traefik.magento.frontend.rule: "Host:magento.${COMPOSE_PROJECT_NAME}.dy"
      traefik.magento.port: 80
      docky.access.help: "http://magento.${COMPOSE_PROJECT_NAME}.dy"
  memcached:
    optional: Add magento server (with connector) ?
    image: sylvainlasnier/memcached
    ports:
      - 11211:11211
  py3ofusion:
    optional: Add py3o reports server
    image: xcgd/py3o.fusion
    links:
      - "py3orenderserver"
  py3orenderserver:
    optional: Add py3o reports server
    image: xcgd/py3oserver-docker
    links:
      - oooserver
    volumes:
      - py3o_tmp:/tmp
  oooserver:
    optional: Add py3o reports server
    image: xcgd/libreoffice
    volumes:
      - py3o_tmp:/tmp
  metabase:
    optional: metabase is Web tools for BI with dashboard
    image: metabase/metabase
    environment:
      - MB_DB_FILE=/file/metabase.db
    links:
      - db
    volumes:
      - .:/file
    labels:
      traefik.metabase.frontend.rule: "Host:metabase.${COMPOSE_PROJECT_NAME}.dy"
      traefik.metabase.port: 3000
      docky.access.help: "http://metabase.${COMPOSE_PROJECT_NAME}.dy"
  firefox:
    optional: Selenium Standalone with Firefox installed and runs a VNC server
    hostname: firefox
    image: "selenium/standalone-firefox-debug"
    ports:
      - "4444:4444"
      - "5900:5900"
    volumes:
    - /dev/shm:/dev/shm
  pgadmin:
    optional: Pgadmin v4 is postgresql Web GUI
    image: fenglc/pgadmin4
    links:
      - db
    labels:
      traefik.pgadmin.frontend.rule: "Host:pgadmin.${COMPOSE_PROJECT_NAME}.dy"
      traefik.pgadmin.port: 5050
      docky.access.help: "http://pgadmin.${COMPOSE_PROJECT_NAME}.dy"
  adminer:
    optional: Adminer, RDBMS Web GUI (including Postgresql) with usability and perf
    image: adminer
    links:
      - db
    labels:
      traefik.adminer.frontend.rule: "Host:adminer.${COMPOSE_PROJECT_NAME}.dy"
      traefik.adminer.port: 8080
      docky.access.help: "http://adminer.${COMPOSE_PROJECT_NAME}.dy"
  db:
    image: quay.io/akretion/postgresql:10
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_DB=db
    volumes:
      - .db/:/var/lib/postgresql/data
  mailcatcher:
    optional: Mailcatcher is a fake mail server
    image: tophfr/mailcatcher
    labels:
      traefik.mailcatcher.frontend.rule: "Host:mailcatcher.${COMPOSE_PROJECT_NAME}.dy"
      traefik.mailcatcher.port: 1080
      docky.access.help: "http://mailcatcher.${COMPOSE_PROJECT_NAME}.dy"
  odoo:
    build: odoo
    environment:
      - PYTHONDONTWRITEBYTECODE=True
      - LOCAL_USER_ID=$UID
      - DB_USER=odoo
      - DB_PASS=odoo
      - DB_NAME=db
      - RUNNING_ENV=$ENV
      - MARABUNTA_MODE=demo
    hostname: ${ENV}-${COMPOSE_PROJECT_NAME}
    links:
      - db
    volumes:
      - ./odoo:/odoo
      - ./data/addons:/data/odoo/addons
      - ./data/filestore:/data/odoo/filestore
      - ./data/sessions:/data/odoo/sessions
    labels:
      traefik.longpolling.frontend.rule: "Host:${COMPOSE_PROJECT_NAME}.dy;PathPrefix:/longpolling/"
      traefik.frontend.rule: "Host:${COMPOSE_PROJECT_NAME}.dy"
      traefik.enable: True
      docky.access.help: "http://${COMPOSE_PROJECT_NAME}.dy"
      docky.main.service: True
      docky.user: odoo
version: '3'
